# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. 
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.     
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.  
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["localhost:9090"]

  # 我们自己的商城项目配置
  - job_name: 'mall'
    static_configs:
      # 目标的采集地址
      - targets: ['user_api:9080']
        labels:
          # 自定义标签
          app: 'user_api'
          env: 'test'

      - targets: ['user_rpc:7001']
        labels:
          app: 'user_rpc'
          env: 'test'

      - targets: ['product_api:9081']
        labels:
          app: 'product_api'
          env: 'test'

      - targets: ['product_rpc:9088']
        labels:
          app: 'product_rpc'
          env: 'test'

      - targets: ['order_api:9082']
        labels:
          app: 'order_api'
          env: 'test'

      - targets: ['order_rpc:9092']
        labels:
          app: 'order_rpc'
          env: 'test'

      - targets: ['pay_api:9083']
        labels:
          app: 'pay_api'
          env: 'test'

      - targets: ['pay_rpc:9093']
        labels:
          app: 'pay_rpc'
          env: 'test'
